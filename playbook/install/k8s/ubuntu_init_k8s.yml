---
- hosts: k8sapiserver
  remote_user: root
  gather_facts: yes
  vars_files:
    - vars/vars.yml

  tasks:
    - name: set hostname
      hostname:
        name: apiserver.k8s.com

    - name: init k8s
      shell: kubeadm init --apiserver-advertise-address={{ node_ip }} --apiserver-cert-extra-sans={{ node_ip }} --kubernetes-version=v{{ kubeVersion }} --pod-network-cidr={{ pod_cidr }} --service-cidr={{ service_cidr }} --cri-socket unix:///var/run/cri-dockerd.sock #--image-repository={{ image_repo }}

    - name: Execute the following commands to configure kubectl
      shell: mkdir -p $HOME/.kube && sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config && sudo chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Copy calico.yaml
      copy:
        src: "calico/{{ calicoVersion }}/calico.yaml"
        dest: /tmp/calico.yaml

    - name: Patch calico file
      shell: |
        PODCIDR="{{ pod_cidr }}"
        PODCIDRBLOCK="{{ pod_cidr_block_size }}"
        sed -i -e "/CALICO_IPV4POOL_CIDR/{n;s@value.*@value: \"$PODCIDR\"@gi}" -e "/CALICO_IPV4POOL_BLOCK_SIZE/{n;s@value.*@value: \"$PODCIDRBLOCK\"@gi}" /tmp/calico.yaml

    - name: Configure calico to use bgp routing and ipip tunneling
      shell: |
        sed -i -e '/CALICO_IPV4POOL_IPIP/{n;s@value.*@value: "Cross-Subnet"@gi}' -e '/CALICO_IPV4POOL_VXLAN/{n;s@value.*@value: "Never"@gi}' /tmp/calico.yaml
      when: mode == "routing" and tunnel_protocol == "IPIP"

    - name: Configure calico to use bgp routing and vxlan tunneling
      shell: |
        sed -i -e '/CALICO_IPV4POOL_VXLAN/{n;s@value.*@value: "Cross-Subnet"@gi}' -e '/CALICO_IPV4POOL_IPIP/{n;s@value.*@value: "Never"@gi}' /tmp/calico.yaml
      when: mode == "routing" and tunnel_protocol == "VXLAN"

    - name: Configure calico to use vxlan tunneling
      shell: |
        sed -i -e '/CALICO_IPV4POOL_VXLAN/{n;s@value.*@value: "Always"@gi}' -e '/CALICO_IPV4POOL_IPIP/{n;s@value.*@value: "Never"@gi}' /tmp/calico.yaml
      when: mode == "tunneling" and tunnel_protocol == "VXLAN"

    - name: Configure calico to use ipip tunneling
      shell: |
        sed -i -e '/CALICO_IPV4POOL_IPIP/{n;s@value.*@value: "Always"@gi}' -e '/CALICO_IPV4POOL_VXLAN/{n;s@value.*@value: "Never"@gi}' /tmp/calico.yaml
      when: mode == "tunneling" and tunnel_protocol == "IPIP"

    - name: deploy  calico
      shell: kubectl create -f /tmp/calico.yaml

    - name: Generate the kubeadm join command
      command: kubeadm token create --print-join-command
      register: join_command
    
    - name: Copy the kubeadm join command to a local file
      local_action: copy content="{{ join_command.stdout_lines[0] }} --cri-socket unix:///var/run/cri-dockerd.sock" dest="./join-command"

- hosts: k8sworker
  become: true
  tasks:
  - name: set hostname
    hostname:
      name: "node.{{ ansible_default_ipv4.address }}"
  
  - name: Copy the kubadm join command to the node
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to the cluster
    command: sh /tmp/join-command.sh
